Week 9: Final Project - HobbyHub

Overview
What is your passion? What topic do you always love to learn more about and can't wait to share with everyone else? In this project, you will be building an entire forum surrounding your favorite topic, be it a sport, an academic subject, or a video game! Your web app will allow users to create posts and see a feed of them on the home page, edit, delete, or leave comments underneath them for discussions, and give upvotes for posts that you like! Take full creative control over the look and feel of the web app, and make sure to employ the web design principles that you learned! Ultimately, you will create an awesome forum for an online community for people who share your hobby!

Required Features

Web app includes a create form that allows the user to create posts
Form requires users to add a post title
Forms should have the option for users to add:
additional textual content
an image added as an external image URL
 
Web app includes a home feed displaying previously created posts
Web app must include home feed displaying previously created posts
By default, each post on the posts feed should show only the post's:
creation time
title
upvotes count
Clicking on a post should direct the user to a new page for the selected post
 
Users can view posts in different ways
Users can sort posts by either:
creation time
upvotes count
Users can search for posts by title
 
Users can interact with each post in different ways
The app includes a separate post page for each created post when clicked, where any additional information is shown, including:
content
image
comments
Users can leave comments underneath a post on the post page
Each post includes an upvote button on the post page.
Each click increases the post's upvotes count by one
Users can upvote any post any number of times
 
A post that a user previously created can be edited or deleted from its post pages
After a user creates a new post, they can go back and edit the post
A previously created post can be deleted from its post page
Screenshot

A simple version of the web app with all the required features implemented:

Home Feed: Screenshot of app with core features implemented

Create a New Post: Screenshot of app with core features implemented

Post Page: Screenshot of app with core features implemented

Update A Post: Screenshot of app with core features implemented


Stretch Features
Web app implements pseudo-authentication
Users can only edit and delete posts or delete comments by entering the secret key, which is set by the user during post creation
or upon launching the web app, the user is assigned a random user ID. It will be associated with all posts and comments that they make and displayed on them
For both options, only the original user author of a post can update or delete it
 Users can repost a previous post by referencing its post ID
Users can repost a previous post by referencing its post ID
On the post page of the new post, the referenced post is displayed and linked, creating a thread
 Users can customize the interface
e.g., selecting the color scheme or showing the content and image of each post on the home feed
 Users can add more characterics to their posts
Users can share and view web videos
Users can set flags such as "Question" or "Opinion" while creating a post
Users can filter posts by flags on the home feed
Users can upload images directly from their local machine as an image file
 Web app displays a loading animation whenever data is being fetched
Resources
Supabase Home Page
Supabase Docs for Databases
supabase-js Docs
How To Load a JSON File in React
ðŸ’¡ Hints
Help! I don't know where to start!
As always, a good starting place would be to set up the basic layout for your app. Try using the provided data (save as JSON to your computer) to display a list of posts and group them into cards!
Look at the past weeks' lab and projects for examples on how to implement similar features. What code will be similar? What do you need to change?
I'm stuck on something!
Don't just skip the Resources section!
Still need a little extra help getting started or running into an error? Try posting in the Class Slack Channel.
What if I want to add more attributes to posts later on?
No problem! From the Supabase projects dashboard, you can easily add more columns to your table and also edit your older rows to add some values in those newer columns as well!
I tried to make an API request to my database, but nothing happened!
This may have happened because your API request was missing something:
With adding to the table, make sure that every column that doesn't have a default value has something in it
With updating and deleting, make sure that there is some sort of ID or distinct value that you can match on within the table so that your database knows what exactly to get rid of or change.
Make sure you uncheck the "Enable Row Level Security (RLS)" option for your table in the database!
How do I sort the posts in in the home feed? Should I write a function to sort the posts array?
You can do so by defining a state variable "orderBy" which specifies which column in the table to sort by, then passing it into your API fetch request like so: